{
	// Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Banana in a box binding": { 
		"prefix": "biab", 
		"body": [ 
			"private inner${1/./${0:/upcase}/}: $2;\n", 
			"get ${1:name}(): ${2:Object} {", 
			"\treturn this.inner${1/./${0:/upcase}/};", 
			"}\n", 
			"@Input() set $1(value: $2) {", 
			"\tif (value !== this.inner${1/./${0:/upcase}/}) {", 
			"\t\tthis.inner${1/./${0:/upcase}/} = value;", 
			"\t\tthis.$1Change.emit(value);", 
			"\t}", 
			"}\n", 
			"@Output() $1Change: EventEmitter<$2> = new EventEmitter<$2>();\n"
		], 
		"description": "Add property to component with change event to allow banana in a box binding"
	}	   
}
